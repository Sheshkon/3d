{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-088943683e43e39e.js","ts/main.ts","ts/core/base.ts","ts/core/color.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","ts/render.ts","ts/core/vector.ts","ts/core/math.ts","ts/core/obj.parser.ts","ts/core/triangle.ts","ts/core/texture.color.parser.ts","ts/core/model.ts","ts/core/matrix.ts","node_modules/@parcel/runtime-js/lib/runtime-367a9de8e0e9687b.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-7076e293688cb6e0.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-f464adb727b42cc9.js","node_modules/@parcel/runtime-js/lib/runtime-08a20aa8de2341b5.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-433baf2c39e7fabd.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"54f1c6afa2a37aa4\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","\r\n// import obj from \"bundle-text:../src/obj/dog2.obj\";\r\n// import obj2 from \"bundle-text:../src/obj/man.obj\";\r\n// import { Color } from \"./core/color\";\r\n// import { Drawer } from \"./core/drawer\";\r\n// import { Matrix3x3 } from \"./core/matrix\";\r\n// import { Model } from \"./core/model\";\r\n// import { ObjParser } from \"./core/obj.parser\";\r\n// import { Triangle } from \"./core/triangle\";\r\n// import { Vector3D } from \"./core/vector\";\r\n// import {getTextureData} from \"./core/texture.color.parser\";\r\n\r\n\r\n// const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\r\n// const WIDTH = 800\r\n// const HEIGHT = 800\r\n// const PIXEL_SIZE = 1\r\n// const IS_READ_FILE = true\r\n// const IS_ANIM = true\r\n\r\n// let alpha = 0\r\n// const drawer = new Drawer(canvas, WIDTH, HEIGHT, PIXEL_SIZE)\r\n// let model: Model\r\n\r\n// let model1 \r\n// let model2\r\n\r\n// let model1Data\r\n// let model2Data\r\n\r\n// const dx = WIDTH / 2\r\n// const dy = HEIGHT / 2\r\n// const objZoom = 300\r\n// const addedVector = new Vector3D(dx, dy, 0)\r\n// const minusLightDir = new Vector3D(0, 0, 1)\r\n// let counter = 0\r\n// document.getElementById(\"next\").addEventListener(\"click\", () => {\r\n//     console.log(\"next\");\r\n//     model = counter %2 == 0 ? model2 : model1\r\n//     drawer.textureBuffer = counter %2 == 0 ? model2Data.data : model1Data.data\r\n//     drawer.textureBufferWidth = counter %2 == 0 ? model2Data.width : model1Data.width\r\n//     drawer.textureBufferHeight = counter %2 == 0 ? model2Data.height : model1Data.height\r\n//     drawer.textureBufferLength = counter %2 == 0 ? model2Data.data.length : model1Data.data.length\r\n\r\n//     counter++\r\n    \r\n// })\r\n\r\n// if (IS_READ_FILE) {\r\n    \r\n//     let parsedObj = ObjParser.parse(obj);\r\n//     let parsedObj2 = ObjParser.parse(obj2)\r\n\r\n//     let data: number[] = []\r\n//     // textureTxt.trim()\r\n//     // let texture = textureTxt.split(\"\\n\")\r\n\r\n    \r\n\r\n//     // for (let i = 0; i < texture.length; i++){\r\n//     //     let line = texture[i].trim().split(\" \")\r\n//     //     for (let j = 0; j < line.length; j++){\r\n//     //         data.push(parseInt(line[j]))\r\n//     //     }\r\n//     // }\r\n//     let texture = new Image ()\r\n//     texture.src = require('../src/texture/shiba2.png')\r\n//     let texture2 = new Image()\r\n//     texture2.src = require('../src/texture/texture.png')\r\n\r\n//     getTextureData(texture2.src).then(data => {\r\n\r\n//         console.log('data', data)\r\n//         model2 = new Model(parsedObj2.mesh, parsedObj2.textureCords, parsedObj2.normals, data.data);\r\n//         console.log(model);\r\n//         // drawer.textureBuffer = model.texture\r\n//         // drawer.textureBufferWidth = data.width\r\n//         // drawer.textureBufferHeight = data.height\r\n//         // drawer.textureBufferLength = data.data.length\r\n//         model2Data = data\r\n//         // update() \r\n//         // drawModel()\r\n//     })\r\n\r\n\r\n//     getTextureData(texture.src).then(data => {\r\n\r\n//         console.log('data', data)\r\n//         model = new Model(parsedObj.mesh, parsedObj.textureCords, parsedObj.normals, data.data);\r\n//         model1 = new Model(parsedObj.mesh, parsedObj.textureCords, parsedObj.normals, data.data);\r\n//         console.log(model);\r\n//         drawer.textureBuffer = model.texture\r\n//         drawer.textureBufferWidth = data.width\r\n//         drawer.textureBufferHeight = data.height\r\n//         drawer.textureBufferLength = data.data.length\r\n//         model1Data = data\r\n//         update() \r\n//         drawModel()\r\n//     })\r\n   \r\n// }\r\n\r\n\r\n// function drawModel(){\r\n//         // update()\r\n\r\n   \r\n//     if (IS_ANIM){\r\n//         drawer.setUpdate(update)\r\n//         drawer.setFpsLimit(30)\r\n//         drawer.startAnimation()\r\n//     }\r\n// }\r\n\r\n\r\n// function update(){\r\n//     drawer.clearZBuffer()\r\n//     drawer.setColor(new Color(30, 30, 30))\r\n//     drawer.clear()\r\n//     drawer.setColor(new Color(200, 0, 0))\r\n\r\n    \r\n//     for (let i = 0; i < model.length; i++) {\r\n//         let triangle: Triangle = model.mesh[i]\r\n//         let textureCord :Triangle = model.textureCords[i]\r\n//         let normals:Triangle = model.normals[i]\r\n   \r\n//         let a: Vector3D = rotateY(triangle.a, alpha)\r\n//         let b: Vector3D = rotateY(triangle.b, alpha)\r\n//         let c: Vector3D = rotateY(triangle.c, alpha)\r\n\r\n//         let vec1 = b.subtract(a)\r\n//         let vec2 = c.subtract(a)\r\n//         let normal = vec1.crossProduct(vec2)\r\n//         normal.normalize()\r\n        \r\n       \r\n//         let intensity = minusLightDir.dotProduct(normal)\r\n\r\n\r\n//         if (intensity > 0){\r\n\r\n           \r\n\r\n//             // console.log(textureCords.a.y, textureCords.a.x, rIndx)\r\n           \r\n\r\n    \r\n\r\n//             // console.log(model.texture[rIndx])\r\n\r\n        \r\n\r\n//             // console.log(rIndx)\r\n\r\n//             // drawer.setColor(new Color(model.texture[rIndx]* intensity, model.texture[rIndx + 1]*intensity, model.texture[rIndx + 2] * intensity))\r\n\r\n    \r\n//             // drawer.setColor(new Color(intensity*255, intensity*0, intensity*0))\r\n\r\n//             drawer.fillTriangle(\r\n//                 a.multiply(objZoom).add(addedVector).round(),\r\n//                 b.multiply(objZoom).add(addedVector).round(),\r\n//                 c.multiply(objZoom).add(addedVector).round(),\r\n//                 textureCord, \r\n//                 intensity*0.8\r\n//             )\r\n//         }\r\n       \r\n//     }\r\n//     drawer.show()\r\n//     alpha += Math.PI / 180\r\n\r\n//     if  (alpha > 2 * Math.PI) alpha = 0\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport {Drawer} from './core/base'\r\nimport {Color} from './core/color'\r\nimport { ObjParser } from './core/obj.parser'\r\nimport {Render} from './render'\r\nimport dog from \"bundle-text:../src/obj/dog2.obj\"\r\nimport man from \"bundle-text:../src/obj/man.obj\"\r\nimport skull from \"bundle-text:../src/obj/skull.obj\"\r\n\r\nimport { getTextureData } from './core/texture.color.parser'\r\nimport { Model } from './core/model'\r\nimport { addListener } from 'process'\r\n\r\nconst WIDTH = 800\r\nconst HEIGHT = 800\r\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\r\n\r\nlet drawer = new Drawer(canvas, WIDTH, HEIGHT, 1)\r\nlet render = new Render(drawer)\r\n\r\nlet parsedDog = ObjParser.parse(dog);\r\nlet parsedMan = ObjParser.parse(man);\r\nlet parsedSkull = ObjParser.parse(skull);\r\n\r\nlet modelDog: Model\r\nlet modelMan: Model\r\nlet modelSkull : Model\r\n\r\nlet textureDog = new Image ()\r\nlet textureMan = new Image ()\r\ntextureDog.src = require('../src/texture/shiba2.png')\r\ntextureMan.src = require('../src/texture/texture.png')\r\n\r\nlet models = []\r\nlet counter = 0\r\n\r\n\r\ngetTextureData(textureDog.src).then(data => {\r\n    console.log('data', data)\r\n        modelDog = new Model(parsedDog.mesh, parsedDog.textureCords, parsedDog.normals, data);\r\n        console.log(modelDog);\r\n        models.push(modelDog)\r\n        render.setModel(modelDog)\r\n\r\n\r\n        getTextureData(textureMan.src).then(data => {\r\n            console.log('data', data)\r\n                modelMan = new Model(parsedMan.mesh, parsedMan.textureCords, parsedMan.normals, data);\r\n                console.log(modelMan);\r\n                models.push(modelMan)\r\n                modelSkull = new Model(parsedSkull.mesh);\r\n                models.push(modelSkull)\r\n                setUpNextBtn()\r\n                start()\r\n            }\r\n        )\r\n\r\n       \r\n    })\r\n\r\n\r\nfunction setUpNextBtn(){\r\n    document.getElementById(\"next\").addEventListener(\"click\", () => {\r\n    console.log(\"next\");\r\n    \r\n\r\n\r\n    counter++\r\n    if (counter > models.length - 1) counter = 0\r\n    render.setModel(models[counter])\r\n    \r\n})\r\n}\r\n\r\n\r\nfunction start(){\r\n    requestAnimationFrame(update)\r\n}\r\n\r\n\r\nfunction update(){\r\n    render.render()\r\n    requestAnimationFrame(update)\r\n    modelDog.rotateY(Math.PI/180)\r\n    modelMan.rotateY(Math.PI/180)\r\n    modelSkull.rotateY(Math.PI/180)\r\n}","import { Color } from \"./color\";\r\n\r\nexport class Drawer {\r\n    \r\n        private canvas: HTMLCanvasElement;\r\n        public width: number\r\n        public height: number\r\n        public canvasWidth: number\r\n        public canvasHeight: number\r\n        public pixelSize: number\r\n        private context: CanvasRenderingContext2D\r\n        private imageData: ImageData\r\n        public currentColor: Color\r\n        public buf: ArrayBuffer\r\n        public buf8: Uint8ClampedArray\r\n        public data: Uint32Array\r\n        public int24Color: number\r\n    \r\n        constructor(canvas: HTMLCanvasElement, width: number, height: number, pixelSize: number) {\r\n            this.canvas = canvas\r\n            this.width = width * pixelSize\r\n            this.height = height * pixelSize\r\n            this.canvasWidth = width\r\n            this.canvasHeight = height\r\n            this.pixelSize = pixelSize\r\n            this.context = this.canvas.getContext(\"2d\")\r\n            this.imageData = this.context.createImageData(this.width, this.height)\r\n            this.currentColor = new Color(0, 0, 0)\r\n            this.context.canvas.width = this.width\r\n            this.context.canvas.height = this.height\r\n            this.buf = new ArrayBuffer(this.width * this.height * 4)\r\n            this.buf8 = new Uint8ClampedArray(this.buf)\r\n            this.data = new Uint32Array(this.buf)\r\n        }\r\n      \r\n        public setColor(color: Color): void{\r\n           this.currentColor = color\r\n           this.int24Color = (255 << 24) | (color.b << 16) | (color.g << 8) | color.r\r\n        }\r\n\r\n        public addPoint(x: number, y: number): void {\r\n            let canvasX = x;\r\n            let canvasY = this.canvasHeight - y - 1;\r\n            if (this.pixelSize == 1) {\r\n                let pixelIndex = canvasY * this.width + canvasX;\r\n                this.data[pixelIndex] = this.int24Color;\r\n                return;\r\n            }\r\n            \r\n            const canvasStartX = canvasX * this.pixelSize;\r\n            const canvasStartY = canvasY * this.pixelSize;\r\n            for (var dx = 0; dx < this.pixelSize; dx++) {\r\n                for (var dy = 0; dy < this.pixelSize; dy++) {\r\n                    let pixelIndex = (canvasStartY + dy) * this.width + canvasStartX + dx; \r\n                    this.data[pixelIndex] = this.int24Color;\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        public clear(): void {\r\n            for (let x = 0; x < this.width; x++) {\r\n                for (let y = 0; y < this.height; y++) {\r\n                    this.data[y * this.width + x] = this.int24Color\r\n                }\r\n            }\r\n        }\r\n\r\n        public show(): void {\r\n            this.imageData.data.set(this.buf8)\r\n            this.context.putImageData(this.imageData, 0, 0)\r\n        }\r\n    }\r\n","export class Color {\r\n\r\n    public r: number;\r\n    public g: number;\r\n    public b: number;\r\n    public a: number;\r\n\r\n    constructor(r: number, g: number, b: number, a: number = 255) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    public static getRanomColor(): Color {\r\n        return new Color(this._getRandomInt(255), this._getRandomInt(255), this._getRandomInt(255))\r\n    }\r\n\r\n    private static  _getRandomInt(max: number) {\r\n        return Math.floor(Math.random() * Math.floor(max+1));\r\n    }\r\n\r\n}\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { Drawer } from \"./core/base\";\r\nimport { Color } from \"./core/color\";\r\nimport { Triangle } from \"./core/triangle\";\r\nimport { Vector3D } from \"./core/vector\";\r\nimport {Mathematics} from \"./core/math\"\r\nimport { Model } from \"./core/model\";\r\n\r\nexport class Render {\r\n    public drawer: Drawer\r\n    public zBuffer: number[]\r\n    public textureBuffer: Uint8ClampedArray\r\n    public textureBufferWidth: number\r\n    public textureBufferHeight: number\r\n    public textureBufferLength: number\r\n    public models = new Array<Model>()\r\n    public lightDir = new Vector3D(0, 0, 1)\r\n    public dx: number\r\n    public dy: number\r\n    public objZoom: number\r\n    public addedVector: Vector3D\r\n    // const minusLightDir = new Vector3D(0, 0, 1)\r\n    \r\n    \r\n    constructor(drawer: Drawer) {\r\n        this.drawer = drawer\r\n        this.zBuffer = new Array(this.drawer.width * this.drawer.height).fill(-Infinity)\r\n        this.dx = this.drawer.width / 2\r\n        this.dy = this.drawer.height / 2\r\n        this.objZoom = 300\r\n        this.addedVector = new Vector3D(this.dx, this.dy, 0)\r\n    }\r\n\r\n\r\n\r\n\r\n    public render() {\r\n        this.clearZBuffer()\r\n        this.drawer.setColor(new Color(30, 30, 30))\r\n        this.drawer.clear()\r\n        this.drawModels()\r\n        this.drawer.show()\r\n    }\r\n\r\n\r\n    public addLine(x0: number, y0: number , x1: number, y1: number): void{\r\n        // y = kx + b\r\n        // setpY = k = (y1 - y0) / (x1 - x0)\r\n        // b = y0 - kx0\r\n        // Bresenham's line algorithm\r\n        \r\n        let isInvert = false\r\n    \r\n        if (Math.abs(y1 - y0) > Math.abs(x1 - x0)) {\r\n            [x0, y0] = [y0, x0];\r\n            [x1, y1] = [y1, x1];\r\n            isInvert = true\r\n        }\r\n    \r\n        if (x1 < x0) {\r\n            [x0, x1] = [x1, x0];\r\n            [y0, y1] = [y1, y0];\r\n        }\r\n    \r\n        let xLength = x1 - x0\r\n        let deltaY = 0\r\n        let stepY = 2 * Math.abs((y1 - y0))\r\n        let y = y0\r\n        let dy = y1 > y0 ? 1 : -1\r\n        let doubleXLenght = 2 * xLength\r\n    \r\n        for (let x = x0; x <= x1; x++) {\r\n            this.drawer.addPoint(isInvert ? y : x, isInvert ? x : y)\r\n            deltaY += stepY\r\n            if (deltaY > xLength) {\r\n                y += dy\r\n                deltaY -= doubleXLenght\r\n            }\r\n    \r\n        }\r\n    }\r\n\r\n    public addTriangle(x0: number, y0: number, x1: number, y1: number, x2: number, y2: number): void {\r\n        this.addLine(x0, y0, x1, y1)\r\n        this.addLine(x1, y1, x2, y2)\r\n        this.addLine(x2, y2, x0, y0)\r\n    }\r\n\r\n    public getBarycentricCoords(a: Vector3D, b: Vector3D, c: Vector3D, p: Vector3D): Vector3D{\r\n        let ab = b.subtract(a)\r\n        let ac = c.subtract(a)\r\n        let pa = a.subtract(p)\r\n    \r\n        let v1 = new Vector3D(ab.x, ac.x, pa.x)\r\n        let v2 = new Vector3D(ab.y, ac.y, pa.y)\r\n        let v3 = v1.crossProduct(v2)\r\n    \r\n        if (v3.z == 0) return null\r\n    \r\n        let u = v3.x / v3.z\r\n        let v = v3.y / v3.z\r\n    \r\n        return new Vector3D(1 - u - v, v, u)\r\n    }\r\n\r\n    private _interpolateFromBaricentricToTextureCoords(textureTriangle: Triangle, barycentric: Vector3D): Vector3D {\r\n        let texturePoint = \r\n            textureTriangle.a.multiply(barycentric.x).add(\r\n                textureTriangle.b.multiply(barycentric.y).add(\r\n                    textureTriangle.c.multiply(barycentric.z)\r\n            )\r\n            )\r\n        return texturePoint\r\n    }\r\n\r\n    public fillTriangleBarycentric(a: Vector3D, b:Vector3D, c: Vector3D, textureTriangle: Triangle = null, intensity = 1): void {\r\n        const [minX, maxX] = Mathematics.getMinMax(a.x, b.x, c.x)\r\n        const [minY, maxY] = Mathematics.getMinMax(a.y, b.y, c.y)\r\n\r\n        for (let y = minY; y <= maxY; y++){\r\n            for (let x = minX; x <= maxX; x++){\r\n                \r\n                let barycentric = this.getBarycentricCoords(a, b, c, new Vector3D(x, y, 0))\r\n                let index = y * this.drawer.width + x\r\n                if (barycentric == null){\r\n                    continue\r\n                }\r\n                let pz = a.z * barycentric.x + b.z * barycentric.y + c.z * barycentric.z\r\n\r\n                if (pz <= this.zBuffer[index]){\r\n                    continue\r\n                }\r\n                if (barycentric.x > 0 && barycentric.y > 0 && barycentric.z > 0){\r\n                    if (textureTriangle != null){\r\n                        let uv = this._interpolateFromBaricentricToTextureCoords(textureTriangle, barycentric)\r\n                        let rIndx = 4 *(Math.ceil(uv.x*this.textureBufferWidth)  + Math.ceil(uv.y * this.textureBufferHeight)*this.textureBufferWidth)\r\n                        let c = new Color(this.textureBuffer[rIndx]*intensity, this.textureBuffer[rIndx+1]*intensity, this.textureBuffer[rIndx+1]*intensity)\r\n                        this.drawer.setColor(c)    \r\n                    }\r\n                    this.drawer.addPoint(x, y)\r\n                    this.zBuffer[index] = pz\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public fillTriangle(a: Vector3D, b: Vector3D, c: Vector3D, textureTriangle: Triangle = null, intensity: number = 1, modelIndx: number): void {\r\n\r\n        let x0 = a.x\r\n        let y0 = a.y\r\n        let x1 = b.x\r\n        let y1 = b.y\r\n        let x2 = c.x\r\n        let y2 = c.y\r\n\r\n        // sort points by y\r\n        // devide triangle on two parts\r\n        // fill first part\r\n        // fill second part\r\n        // user ctg to find x\r\n        \r\n        if (x0 == x1 && x1 == x2) {\r\n            return\r\n        }\r\n\r\n        if (y0 == y1 && y1 == y2) {\r\n            return\r\n        }\r\n\r\n        if (y1 < y0) {\r\n            [x0, x1] = [x1, x0];\r\n            [y0, y1] = [y1, y0];\r\n        }\r\n\r\n        if (y2 < y0) {\r\n            [x0, x2] = [x2, x0];\r\n            [y0, y2] = [y2, y0];\r\n        }\r\n\r\n        if (y2 < y1) {\r\n            [x1, x2] = [x2, x1];\r\n            [y1, y2] = [y2, y1];\r\n        }\r\n\r\n        let ctgA = (x2 - x0) / (y2 - y0);\r\n        let ctgB = y1 != y0 ? (x1 - x0) / (y1 - y0) : 0;\r\n        let ctgC = y2 != y1 ? (x2 - x1) / (y2 - y1) : 0;\r\n\r\n        let xA = x0;\r\n        let xB = x0;\r\n        let xC = x1;\r\n\r\n        let xFrom: number, xTo: number;\r\n\r\n        for (let y = y0;; y++) {\r\n            xFrom = Math.round(xA);\r\n            xTo = y < y1 ? Math.round(xB) : Math.round(xC);\r\n            if (xTo < xFrom) {\r\n                [xFrom, xTo] = [xTo, xFrom];\r\n            }\r\n            for (let x = xFrom; x <= xTo; x++) {\r\n                let barycentric = this.getBarycentricCoords(a, b, c, new Vector3D(x, y, 0))\r\n                if (barycentric != null){\r\n                    let pz = a.z * barycentric.x + b.z * barycentric.y + c.z * barycentric.z\r\n                    let index = y * this.drawer.width + x\r\n\r\n                    // let uv = this.fromBarycentricTo(barycentric, textureTriangle.a.multiply(64), textureTriangle.b.multiply(64), textureTriangle.c.multiply(64))\r\n                           \r\n                    if (pz > this.zBuffer[index]){\r\n                        if (textureTriangle != null) {\r\n\r\n                            let [textureWidth, textureHeight, textureLength] = [this.models[modelIndx].textureWidth, this.models[modelIndx].textureHeight, this.models[modelIndx].textureLength]\r\n                            // console.log(textureWidth, textureHeight, textureLength)\r\n                            let uv = this._interpolateFromBaricentricToTextureCoords(textureTriangle, barycentric)\r\n                            let uvX = Math.ceil(uv.x*textureWidth)\r\n                            let uvY = Math.ceil(uv.y*textureHeight)\r\n                            let rIndx = textureLength - 4 *(uvX + uvY*textureWidth) \r\n                            let r = this.models[modelIndx].texture[rIndx] * intensity\r\n                            let g = this.models[modelIndx].texture[rIndx+1]* intensity\r\n                            let b = this.models[modelIndx].texture[rIndx+2]* intensity\r\n                            let c = new Color(r, g, b)\r\n                            this.drawer.setColor(c)\r\n                        }\r\n                        else {\r\n                            this.drawer.setColor(new Color(255*intensity, 255*intensity, 255*intensity))\r\n                        }\r\n                        this.drawer.addPoint(x, y)\r\n                        this.zBuffer[index] = pz\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if (y >= y2) {\r\n                break;\r\n            }\r\n    \r\n            xA += ctgA;\r\n            if (y < y1) {\r\n                xB += ctgB;\r\n            }\r\n            else {\r\n                xC += ctgC;\r\n            }\r\n        }\r\n    }\r\n\r\n    public drawModels(){\r\n        for (let j = 0; j < this.models.length; j++) {\r\n         \r\n            for (let i = 0; i < this.models[j].length; i++) {\r\n                let triangle: Triangle = this.models[j].mesh[i]\r\n                let textureCord :Triangle = this.models[j].textureCords[i]\r\n                let normals:Triangle =  this.models[j].normals[i]\r\n        \r\n                let a: Vector3D = triangle.a\r\n                let b: Vector3D = triangle.b\r\n                let c: Vector3D = triangle.c\r\n                let vec1 = b.subtract(a)\r\n                let vec2 = c.subtract(a)\r\n                let normal = vec1.crossProduct(vec2)\r\n                normal.normalize()\r\n                            \r\n                let intensity = this.lightDir.dotProduct(normal)\r\n\r\n                if (intensity > 0){\r\n\r\n                    this.fillTriangle(\r\n                        a.multiply(this.objZoom).add(this.addedVector).round(),\r\n                        b.multiply(this.objZoom).add(this.addedVector).round(),\r\n                        c.multiply(this.objZoom).add(this.addedVector).round(),\r\n                        textureCord, \r\n                        intensity,\r\n                        j\r\n                    )\r\n                }\r\n            \r\n            }\r\n        }\r\n    }\r\n            \r\n\r\n\r\n    public clearZBuffer(): void{\r\n        this.zBuffer = new Array(this.drawer.width * this.drawer.height).fill(-Infinity)\r\n    }\r\n\r\n    public addModel(model: Model){\r\n        this.models.push(model)\r\n    }  \r\n\r\n    public clearModels(){\r\n        this.models = []\r\n    }\r\n\r\n    public setModel(model: Model){\r\n        this.models = [model]\r\n    }\r\n}\r\n","export class Vector2D{\r\n    x: number\r\n    y: number\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    public subtract(v: Vector2D): Vector2D {\r\n        return new Vector2D(this.x - v.x, this.y - v.y)\r\n    }\r\n\r\n    public add(v: Vector2D): Vector2D {\r\n        return new Vector2D(this.x + v.x, this.y + v.y)\r\n    }\r\n\r\n    public round(): Vector2D {\r\n        return new Vector2D(Math.round(this.x), Math.round(this.y))\r\n    }\r\n\r\n    public multiply(scalar: number): Vector2D {\r\n        return new Vector2D(this.x * scalar, this.y * scalar)\r\n    }\r\n\r\n    public normalize() {\r\n        let length = Math.sqrt(this.x * this.x + this.y * this.y)\r\n        if (length != 0) {\r\n            this.x /= length\r\n            this.y /= length\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Vector3D extends Vector2D {\r\n    z: number\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        super(x, y)\r\n        this.z = z\r\n    }\r\n  \r\n\r\n    // right hand coordinate system\r\n    public crossProduct(v: Vector3D): Vector3D {\r\n        return new Vector3D(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x)\r\n    }\r\n\r\n    public dotProduct(v: Vector3D): number { \r\n        return this.x * v.x + this.y * v.y + this.z * v.z\r\n    }\r\n\r\n    public subtract(v: Vector3D): Vector3D {\r\n        return new Vector3D(this.x - v.x, this.y - v.y, this.z - v.z)\r\n    }\r\n\r\n    public add(v: Vector3D): Vector3D {\r\n        return new Vector3D(this.x + v.x, this.y + v.y, this.z + v.z)\r\n    }\r\n\r\n    public round(): Vector3D {\r\n        return new Vector3D(Math.round(this.x), Math.round(this.y), Math.round(this.z))\r\n    }\r\n\r\n    public multiply(scalar: number): Vector3D {\r\n        return new Vector3D(this.x * scalar, this.y * scalar, this.z * scalar)\r\n    }\r\n\r\n    public normalize() {\r\n        let length = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n        if (length != 0) {\r\n            this.x /= length\r\n            this.y /= length\r\n            this.z /= length\r\n        }\r\n    }\r\n}\r\n","export class Mathematics{\r\n\r\n    public static getMinMax(a: number, b: number, c: number): [number ,number]{\r\n        let min: number = a\r\n        let max: number = a\r\n    \r\n        if (b < min) min = b\r\n        if (c < min) min = c\r\n        if (b > max) max = b\r\n        if (c > max) max = c\r\n    \r\n        return [min, max]\r\n    }\r\n\r\n}\r\n\r\n","import { Model } from \"./model\";\r\nimport { Triangle } from \"./triangle\";\r\nimport { Vector3D } from \"./vector\";\r\n\r\n\r\nexport class ObjParser{\r\n    public static parse(obj: string): {mesh: Triangle[], textureCords: Triangle[], normals: Triangle[]}{\r\n\r\n        let _obj = obj.split(\"\\n\");\r\n        let _vertices = [];\r\n        let _normals = [];\r\n        let _textureCoords = [];\r\n        let mesh = []\r\n        let textureCords = []\r\n        let normals = []\r\n\r\n        let lineItems: string[] = []\r\n\r\n        for(let i = 0; i < _obj.length; i++){\r\n            let line = _obj[i]\r\n\r\n            switch (line[0]) {\r\n                case \"v\":\r\n                    lineItems = line.trim().substring(2).trim().split(\" \")\r\n                    switch (line[1]){\r\n                        case \" \":\r\n                            _vertices.push(new Vector3D(\r\n                                parseFloat(lineItems[0]),\r\n                                parseFloat(lineItems[1]),\r\n                                parseFloat(lineItems[2])\r\n                                )\r\n                            )   \r\n                        break\r\n\r\n                        case \"t\":\r\n                            _textureCoords.push(new Vector3D(\r\n                                parseFloat(lineItems[0]),\r\n                                parseFloat(lineItems[1]),\r\n                                0\r\n                                )\r\n                            )\r\n                        break\r\n\r\n                        case \"n\":\r\n                            \r\n                            _normals.push(new Vector3D(\r\n                                parseFloat(lineItems[0]),\r\n                                parseFloat(lineItems[1]),\r\n                                parseFloat(lineItems[2])\r\n                                )\r\n                            )\r\n                        break\r\n\r\n                    }\r\n                    break\r\n                    \r\n                case \"f\":\r\n                    lineItems = line.split(\" \")\r\n                    let point1Info = lineItems[1].split(\"/\")\r\n                    let point2Info = lineItems[2].split(\"/\")\r\n                    let point3Info = lineItems[3].split(\"/\")\r\n                    mesh.push(new Triangle(\r\n                        _vertices[parseInt(point1Info[0])-1],\r\n                        _vertices[parseInt(point2Info[0])-1],\r\n                        _vertices[parseInt(point3Info[0])-1]\r\n                       \r\n                    ))\r\n\r\n                    textureCords.push(new Triangle(\r\n                        _textureCoords[parseInt(point1Info[1])-1],\r\n                        _textureCoords[parseInt(point2Info[1])-1],\r\n                        _textureCoords[parseInt(point3Info[1])-1]\r\n                    ))\r\n\r\n                    normals.push(new Triangle(\r\n                        _normals[parseInt(point1Info[2])-1],\r\n                        _normals[parseInt(point2Info[2])-1],\r\n                        _normals[parseInt(point3Info[2])-1]\r\n                    ))\r\n            }\r\n        }\r\n\r\n        console.log(_textureCoords)\r\n\r\n\r\n        return {mesh: mesh, textureCords: textureCords, normals: normals}\r\n    }\r\n}","import { Vector3D } from \"./vector\"\r\n\r\nexport class Triangle {\r\n\r\n    public a: Vector3D\r\n    public b: Vector3D\r\n    public c: Vector3D\r\n   \r\n    constructor(p1: Vector3D, p2: Vector3D, p3: Vector3D) {\r\n        this.a = new Vector3D(p1.x, p1.y, p1.z)\r\n        this.b = new Vector3D(p2.x, p2.y, p2.z)\r\n        this.c = new Vector3D(p3.x, p3.y, p3.z)\r\n    }\r\n\r\n}","/** @param {string} source */\r\nasync function imageDataFromSource (source) {\r\n    const image = Object.assign(new Image(), { src: source });\r\n    await new Promise<void>(resolve => image.addEventListener('load', () => resolve()));\r\n    const context = Object.assign(document.createElement('canvas'), {\r\n       width: image.width,\r\n       height: image.height\r\n    }).getContext('2d');\r\n    context.imageSmoothingEnabled = false;\r\n    context.drawImage(image, 0, 0);\r\n    return context.getImageData(0, 0, image.width, image.height);\r\n }\r\n\r\n\r\nexport async function getTextureData (source) {\r\n   return await imageDataFromSource(source)\r\n}\r\n","import { Matrix3x3 } from \"./matrix\"\r\nimport { Triangle } from \"./triangle\"\r\n\r\nexport class Model {\r\n    public mesh: Triangle[] = []\r\n    public textureCords: Triangle[] = []\r\n    public normals: Triangle[] = []\r\n    public length: number\r\n    public textureWidth: number\r\n    public textureHeight: number\r\n    public textureLength: number\r\n    public texture: Uint8ClampedArray\r\n\r\n    public constructor(mesh: Triangle[], textureCords: Triangle[] = null, normals: Triangle[] = null, textureData: any = null){\r\n        if (textureData != null && (mesh.length != textureCords.length || mesh.length != normals.length))\r\n            throw new Error(\"Mesh, texture cords and normals must have the same length\")\r\n        \r\n        this.length = mesh.length\r\n        this.mesh = mesh\r\n\r\n        if (textureCords != null){\r\n            this.textureCords = textureCords\r\n        }\r\n\r\n        if (normals != null){\r\n        this.normals = normals\r\n        }\r\n\r\n        if (textureData != null){\r\n            this.texture = textureData.data\r\n            this.textureWidth = textureData.width\r\n            this.textureHeight = textureData.height\r\n            this.textureLength = textureData.data.length\r\n        }\r\n       \r\n    }\r\n\r\n    public rotateY(alpha: number){\r\n        let rotationMatrix = new Matrix3x3([\r\n                [Math.cos(alpha), 0, Math.sin(alpha)],\r\n                [0, 1, 0],\r\n                [-Math.sin(alpha), 0, Math.cos(alpha)]\r\n        ])\r\n\r\n        for (let triangle of this.mesh){\r\n            triangle.a = rotationMatrix.multiplyVector(triangle.a)\r\n            triangle.b = rotationMatrix.multiplyVector(triangle.b)\r\n            triangle.c = rotationMatrix.multiplyVector(triangle.c)\r\n        }\r\n    }\r\n\r\n    public rotateX(alpha: number){\r\n        let rotationMatrix = new Matrix3x3([\r\n                [1, 0, 0],\r\n                [0, Math.cos(alpha), -Math.sin(alpha)],\r\n                [0, Math.sin(alpha), Math.cos(alpha)]\r\n        ])\r\n\r\n        for (let triangle of this.mesh){\r\n            triangle.a = rotationMatrix.multiplyVector(triangle.a)\r\n            triangle.b = rotationMatrix.multiplyVector(triangle.b)\r\n            triangle.c = rotationMatrix.multiplyVector(triangle.c)\r\n        }\r\n    }\r\n}\r\n","import { Vector3D } from \"./vector\"\r\n\r\nexport class Matrix3x3 {\r\n    m : number[][]\r\n    public constructor(m: number[][]) {\r\n        this.m = []\r\n        for (let i = 0; i < 3; i++) {\r\n            this.m[i] = []\r\n            for (let j = 0; j < 3; j++) {\r\n                this.m[i][j] = m[i][j]\r\n            }\r\n        }\r\n    }\r\n\r\n    public multiplyVector(vec: Vector3D): Vector3D {\r\n        let newVector = new Vector3D(\r\n            this.m[0][0] * vec.x + this.m[0][1] * vec.y + this.m[0][2] * vec.z,\r\n            this.m[1][0] * vec.x + this.m[1][1] * vec.y + this.m[1][2] * vec.z,\r\n            this.m[2][0] * vec.x + this.m[2][1] * vec.y + this.m[2][2] * vec.z\r\n        )\r\n\r\n        return newVector\r\n    }\r\n}","module.exports = require('./helpers/bundle-url').getBundleURL('7i9Kt') + \"shiba2.35b9ee43.png\" + \"?\" + Date.now();","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = \"dee418a307a9c68f\";","module.exports = \"6a41aa7ff2e428d4\";","module.exports = require('./helpers/bundle-url').getBundleURL('7i9Kt') + \"texture.e3659922.png\" + \"?\" + Date.now();","module.exports = \"6db86c5852b5e249\";"],"names":[],"version":3,"file":"index.a2a37aa4.js.map","sourceRoot":"/__parcel_source_root/"}